<AML>
 <Item type="Method" id="11AFA0B0BD924D0CB14D85B72B48D84C" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[Innovator inn = this.getInnovator();


var list = new List<string>();
var fileStream = new FileStream(@"d:\migration\todays\900208R7.605R06.txt", FileMode.Open, FileAccess.Read);
using (var streamReader = new StreamReader(fileStream, Encoding.UTF8))
{
    string line;
    while ((line = streamReader.ReadLine()) != null)
    {
       string[] myline = line.Split('\t');
       string type = myline[0];
       string partnumber = myline[1];
       string maturity = myline[2];
       string productrev =myline[3];
       string variant = myline[4];
       string partstate = myline[5];
       string rstate = myline[6];
       string identity = myline[7];
       string pname = myline[8]; 
      Item nameid = newItem("SRE_Name","get");
       nameid.setProperty("sre_name",pname);
       nameid=nameid.apply();
       if(nameid.isError())
       {
           return inn.newError(pname);
           
       }
       
       string name = nameid.getProperty("id");
       string description = myline[9];
              string um = myline[10];
              
      Item qryPart = newItem("Part","get");
      qryPart.setProperty("sre_identity",identity);
      Item qryPartres = qryPart.apply();
      int mycnt = qryPartres.getItemCount();
      if(mycnt>=1)
      {
          
      }
      else{
       
      

           
       if(rstate.Contains("."))
       {
           
           Item newPart = newItem("Part","add");
       newPart.setProperty("classification",type);
       newPart.setProperty("item_number",partnumber);
       newPart.setProperty("sre_maturity",maturity);
       newPart.setProperty("sre_productrevision",productrev);
       newPart.setProperty("sre_variant",variant);
       newPart.setProperty("sre_partstate",partstate);
       newPart.setProperty("sre_softwareversion",rstate);
       newPart.setProperty("sre_identity",identity);
       newPart.setProperty("name",name);
       newPart.setProperty("description",description);
       newPart.setProperty("unit",um);
      Item newPartRes = newPart.apply();
       if(newPartRes.isError())
      {
          
          return inn.newError("Fail");
      }
       }  else{  
       Item newPart = newItem("Part","add");
       newPart.setProperty("classification",type);
       newPart.setProperty("item_number",partnumber);
       newPart.setProperty("sre_maturity",maturity);
       newPart.setProperty("sre_productrevision",productrev);
       newPart.setProperty("sre_variant",variant);
       newPart.setProperty("sre_partstate",partstate);
       newPart.setProperty("major_rev",rstate);
       newPart.setProperty("sre_identity",identity);
       newPart.setProperty("name",name);
       newPart.setProperty("description",description);
       newPart.setProperty("unit",um);
      Item newPartRes = newPart.apply();
       
      if(newPartRes.isError())
      {
          
          return inn.newError("Fail");
      }
       }
       
      
      
          
           }
           
         
      
    }

}

return this;]]></method_code>
  <method_type>C#</method_type>
  <name>SRE_PartMigration</name>
 </Item>
</AML>