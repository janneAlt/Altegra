<AML>
 <Item type="Method" id="4874D484A3DD4DB6B9EB52560C4CD98B" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[// PE_CreateNewRevision
// Called from a server action. Creates a new revision outside of change control
// Grant 'Aras PLM' permissions
Aras.Server.Security.Identity plmIdentity = Aras.Server.Security.Identity.GetByName("Aras PLM");
bool PermissionWasSet  = Aras.Server.Security.Permissions.GrantIdentity(plmIdentity);
Innovator inn = this.getInnovator();
string thisType = this.getType();
string thisName = this.getProperty("keyed_name","");

if(this.isNew() || this.getAttribute("isTemp", "").Equals("1", StringComparison.OrdinalIgnoreCase))
{
  return inn.newError(CCO.ErrorLookup.Lookup("PE_CreateNewRevision_MustBeSaved", thisType));
}

bool isInReleasedState = String.Equals(this.getProperty("state",""), "Released", StringComparison.Ordinal);

// Item must be in the Released state
if (!isInReleasedState)
{
  return inn.newError(CCO.ErrorLookup.Lookup("PE_ManualRelease_MustBeInReleasedState", thisType));
}

// Make sure the current user is in the Owner identity
    Item member = newItem("Team Identity","get");
     member.setProperty("source_id", this.getProperty("team_id"));
     member.setProperty("team_role","8F78DAAD4DE346AC86878E16720A63A0");
     member = member.apply();
     if(member.getItemCount()>=1)
     {
          if(member.getProperty("related_id")==""||this.getProperty("created_by_id")==""){return inn.newError("Editor role has no assignment");}
     }
     
    

// Make sure the item is not used on any change items
Item checkResult = this.apply("PE_CheckChangeItemUsage");
if(checkResult.isError())
{
  return checkResult;
}
  


try
{
  // Version and unlock the item
  Item resItem = this.apply("version");
  if (resItem.isError()) return resItem;
  resItem = resItem.apply("unlock"); 
  return resItem; 
}
finally
{
  // Revoke 'Aras PLM' permissions
  if (PermissionWasSet) Aras.Server.Security.Permissions.RevokeIdentity(plmIdentity);
}
]]></method_code>
  <method_type>C#</method_type>
  <name>SRE_ReviseItem</name>
 </Item>
</AML>